@option discardLogicWhitespace=true

@import com.codepiano.deduction.tool.*
@import com.codepiano.deduction.models.*
@import com.codepiano.deduction.constant.*
@import java.util.*

@args (TableDescription tableDescription, List<ColumnDescription> columns, TypeTransfer typeTransfer)

@with (modelName = NameTransfer.transferToCamelCase(tableDescription.getTableName()), variableName = NameTransfer.transferToVariableName(tableDescription.getTableName())) {
<template>
    <div>
        <h2>添加 @modelName</h2>
        <el-form ref="form" :model="form">
            @for(column: columns) {
            <el-form-item label="@column.getColumnName()">
                <el-input
                        type="text"
                        v-model="form.@NameTransfer.transferToVariableName(column.getColumnName())">
                </el-input>
            </el-form-item>
            }
            <el-form-item>
                <el-button type="primary" @@click="handleConfirm">确定</el-button>
                <el-button @@click="backToList">取消</el-button>
            </el-form-item>
        </el-form>
    </div>
</template>

<script>
    // 引入配置
    import {add@(modelName)} from '@@/api/data'

    export default {
        name: '@(modelName)Add',
        methods: {
            handleConfirm() {
                add@(modelName)(this.form).then(res => {
                    res = res.data
                    if (res.meta.code === 0) {
                    }
                })
            },
            backToList() {
                this.$router.push({name: '@(variableName)s'})
            }
        },
        data() {
            return {
                form: {
                @for(column: columns) {
                    @NameTransfer.transferToVariableName(column.getColumnName()): ''
                }
                },
            }
        }
    }
</script>

<style scoped>
    .el-form {
        width: 60%;
    }
</style>
}
